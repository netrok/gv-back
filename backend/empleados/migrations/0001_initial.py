# Generated by Django 5.2.7 on 2025-10-18 03:47

import django.core.validators
import django.db.models.deletion
import empleados.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalogos', '0001_initial'),
        ('organigrama', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_empleado', models.CharField(db_index=True, max_length=30, unique=True)),
                ('primer_nombre', models.CharField(max_length=60)),
                ('segundo_nombre', models.CharField(blank=True, default='', max_length=60)),
                ('apellido_paterno', models.CharField(max_length=60)),
                ('apellido_materno', models.CharField(blank=True, default='', max_length=60)),
                ('apodo', models.CharField(blank=True, default='', max_length=60)),
                ('sexo', models.CharField(choices=[('H', 'Hombre'), ('M', 'Mujer'), ('N', 'No especifica')], default='N', max_length=1)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('nacionalidad', models.CharField(blank=True, default='Mexicana', max_length=60)),
                ('estado_civil', models.CharField(choices=[('S', 'Soltero(a)'), ('C', 'Casado(a)'), ('U', 'Unión libre'), ('D', 'Divorciado(a)'), ('V', 'Viudo(a)'), ('N', 'No especifica')], default='N', max_length=1)),
                ('curp', models.CharField(db_index=True, max_length=18, unique=True)),
                ('rfc', models.CharField(db_index=True, max_length=13, unique=True)),
                ('nss', models.CharField(db_index=True, max_length=11, unique=True, verbose_name='NSS (IMSS)')),
                ('email_personal', models.EmailField(blank=True, default='', max_length=254)),
                ('email_corporativo', models.EmailField(blank=True, default='', max_length=254)),
                ('telefono_movil', models.CharField(blank=True, default='', max_length=20)),
                ('telefono_casa', models.CharField(blank=True, default='', max_length=20)),
                ('calle', models.CharField(blank=True, default='', max_length=120)),
                ('numero_exterior', models.CharField(blank=True, default='', max_length=20)),
                ('numero_interior', models.CharField(blank=True, default='', max_length=20)),
                ('colonia', models.CharField(blank=True, default='', max_length=120)),
                ('codigo_postal', models.CharField(blank=True, default='', max_length=5)),
                ('referencia_domicilio', models.CharField(blank=True, default='', max_length=255)),
                ('dom_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('dom_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('emergencia_nombre', models.CharField(blank=True, default='', max_length=120)),
                ('emergencia_parentesco', models.CharField(blank=True, default='', max_length=60)),
                ('emergencia_telefono', models.CharField(blank=True, default='', max_length=20)),
                ('emergencia_telefono_alt', models.CharField(blank=True, default='', max_length=20)),
                ('tipo_sangre', models.CharField(blank=True, default='', max_length=3)),
                ('alergias', models.CharField(blank=True, default='', max_length=255)),
                ('padecimientos', models.CharField(blank=True, default='', max_length=255)),
                ('discapacidad', models.CharField(blank=True, default='', max_length=255)),
                ('carrera', models.CharField(blank=True, default='', max_length=120)),
                ('institucion', models.CharField(blank=True, default='', max_length=120)),
                ('cedula_profesional', models.CharField(blank=True, default='', max_length=30)),
                ('cuenta_bancaria', models.CharField(blank=True, default='', max_length=20, validators=[django.core.validators.RegexValidator('^\\d{6,20}$', 'Cuenta debe ser numérica (6-20 dígitos).')])),
                ('clabe', models.CharField(blank=True, default='', max_length=18)),
                ('tarjeta_nomina', models.CharField(blank=True, default='', max_length=20)),
                ('fecha_alta', models.DateField(blank=True, null=True)),
                ('fecha_antiguedad', models.DateField(blank=True, null=True)),
                ('fecha_baja', models.DateField(blank=True, null=True)),
                ('motivo_baja', models.CharField(blank=True, default='', max_length=255)),
                ('estatus', models.CharField(choices=[('A', 'Activo'), ('B', 'Baja'), ('S', 'Suspendido'), ('L', 'Licencia')], db_index=True, default='A', max_length=1)),
                ('tipo_contrato', models.CharField(choices=[('I', 'Tiempo indeterminado'), ('D', 'Tiempo determinado'), ('T', 'Temporal/Proyecto'), ('H', 'Honorarios'), ('O', 'Otro')], default='I', max_length=1)),
                ('tipo_jornada', models.CharField(choices=[('D', 'Diurna'), ('N', 'Nocturna'), ('M', 'Mixta'), ('F', 'Flexible')], default='D', max_length=1)),
                ('periodicidad_pago', models.CharField(choices=[('S', 'Semanal'), ('Q', 'Quincenal'), ('M', 'Mensual')], default='Q', max_length=1)),
                ('salario_diario', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salario_mensual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salario_integrado', models.DecimalField(blank=True, decimal_places=2, help_text='SDI', max_digits=12, null=True)),
                ('infonavit_numero', models.CharField(blank=True, default='', max_length=20)),
                ('infonavit_tipo', models.CharField(blank=True, default='', help_text='VSM/UMI/PORCENTAJE', max_length=10)),
                ('infonavit_descuento', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fonacot_numero', models.CharField(blank=True, default='', max_length=20)),
                ('fonacot_descuento', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to=empleados.models.foto_upload_path)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('actualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empleados_actualizados', to=settings.AUTH_USER_MODEL)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organigrama.area')),
                ('banco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogos.banco')),
                ('creado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empleados_creados', to=settings.AUTH_USER_MODEL)),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogos.departamento')),
                ('domicilio_estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='domicilios_estado', to='catalogos.estado')),
                ('domicilio_municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='domicilios_municipio', to='catalogos.municipio')),
                ('escolaridad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogos.escolaridad')),
                ('horario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogos.horario')),
                ('nacimiento_estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nacimientos_estado', to='catalogos.estado')),
                ('nacimiento_municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nacimientos_municipio', to='catalogos.municipio')),
                ('puesto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogos.puesto')),
                ('sucursal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organigrama.sucursal')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reportes_directos', to='empleados.empleado')),
                ('turno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogos.turno')),
                ('unidad_negocio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='organigrama.unidadnegocio')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ('apellido_paterno', 'apellido_materno', 'primer_nombre'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmpleado',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('numero_empleado', models.CharField(db_index=True, max_length=30)),
                ('primer_nombre', models.CharField(max_length=60)),
                ('segundo_nombre', models.CharField(blank=True, default='', max_length=60)),
                ('apellido_paterno', models.CharField(max_length=60)),
                ('apellido_materno', models.CharField(blank=True, default='', max_length=60)),
                ('apodo', models.CharField(blank=True, default='', max_length=60)),
                ('sexo', models.CharField(choices=[('H', 'Hombre'), ('M', 'Mujer'), ('N', 'No especifica')], default='N', max_length=1)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('nacionalidad', models.CharField(blank=True, default='Mexicana', max_length=60)),
                ('estado_civil', models.CharField(choices=[('S', 'Soltero(a)'), ('C', 'Casado(a)'), ('U', 'Unión libre'), ('D', 'Divorciado(a)'), ('V', 'Viudo(a)'), ('N', 'No especifica')], default='N', max_length=1)),
                ('curp', models.CharField(db_index=True, max_length=18)),
                ('rfc', models.CharField(db_index=True, max_length=13)),
                ('nss', models.CharField(db_index=True, max_length=11, verbose_name='NSS (IMSS)')),
                ('email_personal', models.EmailField(blank=True, default='', max_length=254)),
                ('email_corporativo', models.EmailField(blank=True, default='', max_length=254)),
                ('telefono_movil', models.CharField(blank=True, default='', max_length=20)),
                ('telefono_casa', models.CharField(blank=True, default='', max_length=20)),
                ('calle', models.CharField(blank=True, default='', max_length=120)),
                ('numero_exterior', models.CharField(blank=True, default='', max_length=20)),
                ('numero_interior', models.CharField(blank=True, default='', max_length=20)),
                ('colonia', models.CharField(blank=True, default='', max_length=120)),
                ('codigo_postal', models.CharField(blank=True, default='', max_length=5)),
                ('referencia_domicilio', models.CharField(blank=True, default='', max_length=255)),
                ('dom_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('dom_lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('emergencia_nombre', models.CharField(blank=True, default='', max_length=120)),
                ('emergencia_parentesco', models.CharField(blank=True, default='', max_length=60)),
                ('emergencia_telefono', models.CharField(blank=True, default='', max_length=20)),
                ('emergencia_telefono_alt', models.CharField(blank=True, default='', max_length=20)),
                ('tipo_sangre', models.CharField(blank=True, default='', max_length=3)),
                ('alergias', models.CharField(blank=True, default='', max_length=255)),
                ('padecimientos', models.CharField(blank=True, default='', max_length=255)),
                ('discapacidad', models.CharField(blank=True, default='', max_length=255)),
                ('carrera', models.CharField(blank=True, default='', max_length=120)),
                ('institucion', models.CharField(blank=True, default='', max_length=120)),
                ('cedula_profesional', models.CharField(blank=True, default='', max_length=30)),
                ('cuenta_bancaria', models.CharField(blank=True, default='', max_length=20, validators=[django.core.validators.RegexValidator('^\\d{6,20}$', 'Cuenta debe ser numérica (6-20 dígitos).')])),
                ('clabe', models.CharField(blank=True, default='', max_length=18)),
                ('tarjeta_nomina', models.CharField(blank=True, default='', max_length=20)),
                ('fecha_alta', models.DateField(blank=True, null=True)),
                ('fecha_antiguedad', models.DateField(blank=True, null=True)),
                ('fecha_baja', models.DateField(blank=True, null=True)),
                ('motivo_baja', models.CharField(blank=True, default='', max_length=255)),
                ('estatus', models.CharField(choices=[('A', 'Activo'), ('B', 'Baja'), ('S', 'Suspendido'), ('L', 'Licencia')], db_index=True, default='A', max_length=1)),
                ('tipo_contrato', models.CharField(choices=[('I', 'Tiempo indeterminado'), ('D', 'Tiempo determinado'), ('T', 'Temporal/Proyecto'), ('H', 'Honorarios'), ('O', 'Otro')], default='I', max_length=1)),
                ('tipo_jornada', models.CharField(choices=[('D', 'Diurna'), ('N', 'Nocturna'), ('M', 'Mixta'), ('F', 'Flexible')], default='D', max_length=1)),
                ('periodicidad_pago', models.CharField(choices=[('S', 'Semanal'), ('Q', 'Quincenal'), ('M', 'Mensual')], default='Q', max_length=1)),
                ('salario_diario', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salario_mensual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salario_integrado', models.DecimalField(blank=True, decimal_places=2, help_text='SDI', max_digits=12, null=True)),
                ('infonavit_numero', models.CharField(blank=True, default='', max_length=20)),
                ('infonavit_tipo', models.CharField(blank=True, default='', help_text='VSM/UMI/PORCENTAJE', max_length=10)),
                ('infonavit_descuento', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fonacot_numero', models.CharField(blank=True, default='', max_length=20)),
                ('fonacot_descuento', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('foto', models.TextField(blank=True, max_length=100, null=True)),
                ('creado_en', models.DateTimeField(blank=True, editable=False)),
                ('actualizado_en', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('actualizado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('area', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organigrama.area')),
                ('banco', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.banco')),
                ('creado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('departamento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.departamento')),
                ('domicilio_estado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.estado')),
                ('domicilio_municipio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.municipio')),
                ('escolaridad', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.escolaridad')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('horario', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.horario')),
                ('nacimiento_estado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.estado')),
                ('nacimiento_municipio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.municipio')),
                ('puesto', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.puesto')),
                ('sucursal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organigrama.sucursal')),
                ('supervisor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='empleados.empleado')),
                ('turno', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='catalogos.turno')),
                ('unidad_negocio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organigrama.unidadnegocio')),
            ],
            options={
                'verbose_name': 'historical Empleado',
                'verbose_name_plural': 'historical Empleados',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['estatus', 'sucursal', 'area', 'departamento', 'puesto'], name='empleados_e_estatus_a54730_idx'),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['curp'], name='empleados_e_curp_a3e4d5_idx'),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['rfc'], name='empleados_e_rfc_6745f2_idx'),
        ),
        migrations.AddIndex(
            model_name='empleado',
            index=models.Index(fields=['nss'], name='empleados_e_nss_4a907e_idx'),
        ),
    ]
